Index: npf.c
===================================================================
--- npf.c	(revision 2367)
+++ npf.c	(working copy)
@@ -298,7 +298,7 @@
 
 /* Determine the cost of this node, for road tracks */
 int32 NPFRoadPathCost(AyStar* as, AyStarNode* current, OpenListNode* parent) {
-	TileIndex tile = current->tile;
+	TileIndex tile = current->tile, tile2;
 	int32 cost = 0;
 
 	/* Determine base length */
@@ -309,9 +309,26 @@
 				break;
 			}
 			/* Fall through if above if is false, it is a bridge
-			 * then. We treat that as ordinary rail */
+			 * then. We treat that as ordinary road */
 		case MP_STREET:
 			cost = NPF_TILE_LENGTH;
+			/* Drivers prefer to go past trees and water, rather
+			 * than houses and industries (not a proven fact)
+			 * so this is what this lot of code does :D */
+			
+			// tile right
+			tile2 = TILE_MASK(tile + TileOffsByDir((current->direction + 1) & 3));
+			if (GetTileType(tile2) == MP_HOUSE || GetTileType(tile2) == MP_INDUSTRY)
+				cost += 100;
+			if (GetTileType(tile2) == MP_WATER || GetTileType(tile2) ==  MP_TREES)
+				cost -= 50;
+				
+			// tile left
+			tile2 = TILE_MASK(tile + TileOffsByDir((current->direction - 1) & 3));	
+			if (GetTileType(tile2) == MP_HOUSE || GetTileType(tile2) == MP_INDUSTRY)
+				cost += 100;
+			if (GetTileType(tile2) == MP_WATER || GetTileType(tile2) ==  MP_TREES)
+				cost -= 50;
 			break;
 		default:
 			break;
