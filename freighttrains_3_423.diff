Index: lang/english.txt
===================================================================
--- lang/english.txt	(revision 2416)
+++ lang/english.txt	(working copy)
@@ -317,8 +317,10 @@
 STR_013E_CAPACITIES                                             :{BLACK}Capacities
 STR_013E_TOTAL_CARGO                                            :{BLACK}Total Cargo
 STR_013F_CAPACITY                                               :{BLACK}Capacity: {LTBLUE}{STRING}
+STR_013F_CAPACITY_MULT                                          :{BLACK}Capacity: {LTBLUE}{STRING} (x{COMMA8})
 STR_013F_TOTAL_CAPACITY_TEXT                                    :{BLACK}Total cargo capacity of this train:
 STR_013F_TOTAL_CAPACITY                                         :{LTBLUE}- {CARGO} ({SHORTCARGO})
+STR_013F_TOTAL_CAPACITY_MULT                                    :{LTBLUE}- {CARGO} ({SHORTCARGO}) (x{COMMA8})
 STR_0140_NEW_GAME                                               :{BLACK}New Game
 STR_0141_LOAD_GAME                                              :{BLACK}Load Game
 STR_0142_TUTORIAL_DEMONSTRATION                                 :{BLACK}Tutorial / Demonstration
@@ -1022,6 +1024,7 @@
 STR_CONFIG_PATCHES_NONUNIFORM_STATIONS                          :{LTBLUE}Nonuniform stations: {ORANGE}{STRING}
 STR_CONFIG_PATCHES_NEW_TRAIN_PATHFIND                           :{LTBLUE}New algorithm for train pathfinding (NTP): {ORANGE}{STRING}
 STR_CONFIG_PATCHES_NEW_PATHFINDING_ALL                          :{LTBLUE}New global pathfinding (NPF, overrides NTP): {ORANGE}{STRING}
+STR_CONFIG_PATCHES_FREIGHTTRAINS                                :{LTBLUE}Multiply weight of freight to simulate long trains: {ORANGE}{STRING}
 
 STR_CONFIG_PATCHES_SMALL_AIRPORTS                               :{LTBLUE}Always allow small airports: {ORANGE}{STRING}
 
@@ -2417,6 +2420,7 @@
 STR_UNKNOWN_DESTINATION                                         :unknown destination
 STR_8812_EMPTY                                                  :{LTBLUE}Empty
 STR_8813_FROM                                                   :{LTBLUE}{CARGO} from {STATION}
+STR_8813_FROM_MULT                                              :{LTBLUE}{CARGO} from {STATION} (x{COMMA8})
 STR_8814_TRAIN_IS_WAITING_IN_DEPOT                              :{WHITE}Train {COMMA16} is waiting in depot
 STR_8815_NEW_VEHICLES                                           :{BLACK}New Vehicles
 STR_8816                                                        :{BLACK}-
Index: variables.h
===================================================================
--- variables.h	(revision 2416)
+++ variables.h	(working copy)
@@ -217,6 +217,7 @@
 	uint32 npf_water_curve_penalty; /* The penalty for curves */
 
 	bool population_in_label; // Show the population of a town in his label?
+	uint8 freight_trains; ///< Multiply the weight of cargo to give semi-realistics weights...
 } Patches;
 
 VARDEF Patches _patches;
Index: train_cmd.c
===================================================================
--- train_cmd.c	(revision 2416)
+++ train_cmd.c	(working copy)
@@ -44,10 +44,15 @@
 		// vehicle weight is the sum of the weight of the vehicle and the weight of its cargo
 		vweight += rvi->weight;
 		vweight += (_cargoc.weights[u->cargo_type] * u->cargo_count) / 16;
+		
 		// powered wagons have extra weight added
 		if HASBIT(u->u.rail.flags, VRF_POWEREDWAGON)
 			vweight += RailVehInfo(v->engine_type)->pow_wag_weight;
 
+		// if cargo is freight, multiply the wagon's weight by the freight_trains factor
+		if (FreightWagonMult(u))
+			vweight *= _patches.freight_trains;
+
 		// consist weight is the sum of the weight of all vehicles in the consist
 		weight += vweight;
 
Index: vehicle.c
===================================================================
--- vehicle.c	(revision 2416)
+++ vehicle.c	(working copy)
@@ -1674,8 +1674,6 @@
 	return 0;
 }
 
-
-
 static Rect _old_vehicle_coords;
 
 void BeginVehicleMove(Vehicle *v) {
Index: vehicle.h
===================================================================
--- vehicle.h	(revision 2416)
+++ vehicle.h	(working copy)
@@ -292,7 +292,12 @@
 void VehicleInTheWayErrMsg(Vehicle *v);
 Vehicle *FindVehicleBetween(TileIndex from, TileIndex to, byte z);
 TileIndex GetVehicleOutOfTunnelTile(const Vehicle *v);
+static inline bool FreightWagonMult(const Vehicle *v)
+{
+	return _patches.freight_trains > 1 && v->cargo_type != CT_PASSENGERS && v->cargo_type != CT_MAIL;
 
+}
+
 bool UpdateSignalsOnSegment(uint tile, byte direction);
 void SetSignalsOnBothDir(uint tile, byte track);
 
Index: settings.c
===================================================================
--- settings.c	(revision 2416)
+++ settings.c	(working copy)
@@ -876,6 +876,7 @@
 	{"realistic_acceleration",SDT_BOOL, (void*)false,	&_patches.realistic_acceleration,	NULL},
 	{"forbid_90_deg",				SDT_BOOL, 	(void*)false, &_patches.forbid_90_deg,					NULL},
 	{"improved_load",				SDT_BOOL,		(void*)false,	&_patches.improved_load,				NULL},
+	{"freight_trains",				SDT_UINT8,	(void*)1,			&_patches.freight_trains,				NULL},
 
 	{"max_trains",					SDT_UINT16,	(void*)500,		&_patches.max_trains,						NULL},
 	{"max_roadveh",					SDT_UINT16,	(void*)500,		&_patches.max_roadveh,					NULL},
Index: train_gui.c
===================================================================
--- train_gui.c	(revision 2416)
+++ train_gui.c	(working copy)
@@ -984,6 +984,10 @@
 			SetDParam(1, num);
 			SetDParam(2, v->cargo_source);
 			str = STR_8813_FROM;
+			if (FreightWagonMult(v)) {
+				SetDParam(3, _patches.freight_trains);
+				str = STR_8813_FROM_MULT;
+			}
 		}
 		DrawString(x, y, str, 0);
 	}
@@ -1010,7 +1014,11 @@
 	if (v->cargo_cap != 0) {
 		SetDParam(1, v->cargo_cap);
 		SetDParam(0, _cargoc.names_long_p[v->cargo_type]);
-		DrawString(x, y, STR_013F_CAPACITY, 0);
+		if (FreightWagonMult(v)) {
+			SetDParam(2, _patches.freight_trains);
+			DrawString(x, y, STR_013F_CAPACITY_MULT, 0);
+		} else
+			DrawString(x, y, STR_013F_CAPACITY, 0);
 	}
 }
 
@@ -1131,7 +1139,12 @@
 				SetDParam(1, tot_cargo[i][0]);	// {CARGO} #2
 				SetDParam(2, i);								// {SHORTCARGO} #1
 				SetDParam(3, tot_cargo[i][1]);	// {SHORTCARGO} #2
-				DrawString(x, y, STR_013F_TOTAL_CAPACITY, 0);
+				if (_patches.freight_trains > 1 && i != CT_PASSENGERS && i != CT_MAIL) {
+					SetDParam(4, _patches.freight_trains);
+					DrawString(x, y, STR_013F_TOTAL_CAPACITY_MULT, 0);
+				} else {
+					DrawString(x, y, STR_013F_TOTAL_CAPACITY, 0);
+				}
 			}
 		} while (++i != NUM_CARGO);
 	}
Index: settings_gui.c
===================================================================
--- settings_gui.c	(revision 2416)
+++ settings_gui.c	(working copy)
@@ -702,6 +702,7 @@
 	{PE_UINT16, PF_0ISDIS, STR_CONFIG_PATCHES_SERVINT_AIRCRAFT, "servint_aircraft", &_patches.servint_aircraft, 5,800,  5, &InValidateDetailsWindow},
 	{PE_UINT16, PF_0ISDIS, STR_CONFIG_PATCHES_SERVINT_SHIPS,		"servint_ships",    &_patches.servint_ships,		5,800,  5, &InValidateDetailsWindow},
 	{PE_BOOL,   0,         STR_CONFIG_PATCHES_NOSERVICE,        "no_servicing_if_no_breakdowns", &_patches.no_servicing_if_no_breakdowns, 0, 0, 0, NULL},
+	{PE_UINT8,	0, STR_CONFIG_PATCHES_FREIGHTTRAINS,		"freight_trains", &_patches.freight_trains,				1,  8,  1, NULL},
 };
 
 static const PatchEntry _patches_stations[] = {
@@ -1123,7 +1124,7 @@
 {   WWT_CLOSEBOX,   RESIZE_NONE,    10,     0,    10,     0,    13, STR_00C5,												STR_018B_CLOSE_WINDOW},
 {    WWT_CAPTION,   RESIZE_NONE,    10,    11,   369,     0,    13, STR_CONFIG_PATCHES_CAPTION,			STR_018C_WINDOW_TITLE_DRAG_THIS},
 {      WWT_PANEL,   RESIZE_NONE,    10,     0,   369,    14,    41, 0x0,															STR_NULL},
-{      WWT_PANEL,   RESIZE_NONE,    10,     0,   369,    42,   320, 0x0,															STR_NULL},
+{      WWT_PANEL,   RESIZE_NONE,    10,     0,   369,    42,   340, 0x0,															STR_NULL},
 
 {   WWT_CLOSEBOX,   RESIZE_NONE,     3,    10,    96,    16,    27, STR_CONFIG_PATCHES_GUI,					STR_NULL},
 {   WWT_CLOSEBOX,   RESIZE_NONE,     3,    97,   183,    16,    27, STR_CONFIG_PATCHES_CONSTRUCTION,	STR_NULL},
@@ -1135,7 +1136,7 @@
 };
 
 static const WindowDesc _patches_selection_desc = {
-	WDP_CENTER, WDP_CENTER, 370, 321,
+	WDP_CENTER, WDP_CENTER, 370, 341,
 	WC_GAME_OPTIONS,0,
 	WDF_STD_TOOLTIPS | WDF_STD_BTN | WDF_DEF_WIDGET,
 	_patches_selection_widgets,
