Index: lang/english.txt
===================================================================
--- lang/english.txt	(revision 2431)
+++ lang/english.txt	(working copy)
@@ -785,13 +785,18 @@
 STR_02DE_MAP_OF_WORLD                                           :Map of world
 STR_EXTRA_VIEW_PORT                                             :Extra viewport
 STR_SIGN_LIST                                                   :Sign list
+
 STR_02DF_TOWN_DIRECTORY                                         :Town directory
 STR_TOWN_POPULATION                                             :{BLACK}World population: {COMMA32}
 STR_EXTRA_VIEW_PORT_TITLE                                       :{WHITE}Viewport {COMMA16}
-STR_EXTRA_VIEW_MOVE_VIEW_TO_MAIN                                :{BLACK}Copy to viewport
-STR_EXTRA_VIEW_MOVE_VIEW_TO_MAIN_TT                             :{BLACK}Copy the location of the global view to this viewport
-STR_EXTRA_VIEW_MOVE_MAIN_TO_VIEW                                :{BLACK}Paste from viewport
-STR_EXTRA_VIEW_MOVE_MAIN_TO_VIEW_TT                             :{BLACK}Paste the location of this viewport to the global view
+STR_EXTRA_VIEW_MOVE_VIEW_TO_MAIN                                :{BLACK}Go to location
+STR_EXTRA_VIEW_MOVE_VIEW_TO_MAIN_TT                             :{BLACK}Paste the location of this viewport into the global view
+STR_EXTRA_VIEW_MOVE_MAIN_TO_VIEW                                :{BLACK}Set location
+STR_EXTRA_VIEW_MOVE_MAIN_TO_VIEW_TT                             :{BLACK}Copy the location of the global view into this viewport
+ 
+STR_ZOOM_IN_SMALLMAP                             :{BLACK}Zoom in the small map
+STR_ZOOM_OUT_SMALLMAP                             :{BLACK}Zoom out the small map
+STR_RECENTRE_SMALLMAP                             :{BLACK}Recentre the location of the small map
 
 STR_02E0_CURRENCY_UNITS                                         :{BLACK}Currency units
 STR_02E1                                                        :{BLACK}{SKIP}{STRING}
Index: smallmap_gui.c
===================================================================
--- smallmap_gui.c	(revision 2431)
+++ smallmap_gui.c	(working copy)
@@ -13,6 +13,7 @@
 #include "vehicle.h"
 #include "town.h"
 #include "sound.h"
+#include "variables.h"
 
 static const Widget _smallmap_widgets[] = {
 {   WWT_TEXTBTN,   RESIZE_NONE,    13,     0,    10,     0,    13, STR_00C5,                STR_018B_CLOSE_WINDOW},
@@ -26,9 +27,11 @@
 {    WWT_IMGBTN,   RESIZE_LRTB,    13,   380,   401,   280,   301, SPR_IMG_SHOW_ROUTES,     STR_0194_SHOW_TRANSPORT_ROUTES_ON},
 {    WWT_IMGBTN,   RESIZE_LRTB,    13,   402,   423,   280,   301, SPR_IMG_PLANTTREES,      STR_0195_SHOW_VEGETATION_ON_MAP},
 {    WWT_IMGBTN,   RESIZE_LRTB,    13,   424,   445,   280,   301, SPR_IMG_COMPANY_GENERAL, STR_0196_SHOW_LAND_OWNERS_ON_MAP},
-{    WWT_IMGBTN,   RESIZE_LRTB,    13,   358,   379,   258,   279, 0x0,                     STR_NULL},
+{     WWT_PANEL,   RESIZE_LRTB,    13,   358,   379,   258,   279, 683,				STR_RECENTRE_SMALLMAP},
 {    WWT_IMGBTN,   RESIZE_LRTB,    13,   358,   379,   280,   301, SPR_IMG_TOWN,            STR_0197_TOGGLE_TOWN_NAMES_ON_OFF},
-{    WWT_IMGBTN,    RESIZE_RTB,    13,     0,   357,   258,   301, 0x0,                     STR_NULL},
+{     WWT_PANEL,   RESIZE_LRTB,    13,   336,   357,   258,   279, 0x2DF,					STR_ZOOM_IN_SMALLMAP},
+{     WWT_PANEL,   RESIZE_LRTB,    13,   336,   357,   280,   301, 0x2E0,					STR_ZOOM_OUT_SMALLMAP},
+{     WWT_IMGBTN,    RESIZE_RTB,    13,     0,   335,   258,   301, 0x0,					STR_NULL},
 {     WWT_PANEL,    RESIZE_RTB,    13,     0,   433,   302,   313, 0x0,                     STR_NULL},
 { WWT_RESIZEBOX,   RESIZE_LRTB,    13,   434,   445,   302,   313, 0x0,                     STR_RESIZE_BUTTON},
 {  WIDGETS_END},
@@ -36,6 +39,7 @@
 
 static int _smallmap_type;
 static bool _smallmap_show_towns = true;
+static int smallmap_zoom;
 
 #define MK(a,b) a, b
 #define MKEND() 0xFFFF
@@ -330,10 +334,10 @@
 
 	do {
 		// check if the tile (xc,yc) is within the map range
-		if (xc < MapMaxX() && yc < MapMaxY()) {
+		if (xc * smallmap_zoom < MapMaxX() && yc * smallmap_zoom < MapMaxY()) {
 			// check if the dst pointer points to a pixel inside the screen buffer
 			if (dst > _screen.dst_ptr && dst < dst_ptr_end)
-				WRITE_PIXELS_OR(dst, proc(TILE_XY(xc, yc)) & mask );
+				WRITE_PIXELS_OR(dst, proc(TILE_XY(xc * smallmap_zoom, yc * smallmap_zoom)) & mask );
 		}
 	// switch to next tile in the column
 	} while (xc++, yc++, dst += pitch, --reps != 0);
@@ -701,8 +705,8 @@
 					(v->vehstatus & (VS_HIDDEN | VS_UNCLICKABLE)) == 0) {
 				// Remap into flat coordinates.
 				Point pt = RemapCoords(
-					(v->x_pos - WP(w,smallmap_d).scroll_x) / 16,
-					(v->y_pos - WP(w,smallmap_d).scroll_y) / 16,
+					((v->x_pos / smallmap_zoom) - WP(w,smallmap_d).scroll_x) / 16,
+					((v->y_pos / smallmap_zoom)  - WP(w,smallmap_d).scroll_y) / 16,
 					0);
 				x = pt.x;
 				y = pt.y;
@@ -749,8 +753,8 @@
 			if (t->xy != 0) {
 				// Remap the town coordinate
 				Point pt = RemapCoords(
-					(int)(TileX(t->xy) * 16 - WP(w, smallmap_d).scroll_x) / 16,
-					(int)(TileY(t->xy) * 16 - WP(w, smallmap_d).scroll_y) / 16,
+					(int)((TileX(t->xy) / smallmap_zoom) * 16 - WP(w, smallmap_d).scroll_x) / 16,
+					(int)((TileY(t->xy) / smallmap_zoom) * 16 - WP(w, smallmap_d).scroll_y) / 16,
 					0);
 				x = pt.x - WP(w,smallmap_d).subscroll + 3 - (t->sign.width_2 >> 1);
 				y = pt.y;
@@ -777,10 +781,10 @@
 
 		pt = RemapCoords(WP(w, smallmap_d).scroll_x, WP(w, smallmap_d).scroll_y, 0);
 
-		x = vp->virtual_left - pt.x;
-		y = vp->virtual_top - pt.y;
-		x2 = (x + vp->virtual_width) / 16;
-		y2 = (y + vp->virtual_height) / 16;
+		x = (vp->virtual_left / smallmap_zoom) - pt.x;
+		y = (vp->virtual_top / smallmap_zoom) - pt.y;
+		x2 = (x + (vp->virtual_width / smallmap_zoom)) / 16;
+		y2 = (y + (vp->virtual_height / smallmap_zoom)) / 16;
 		x /= 16;
 		y /= 16;
 
@@ -799,6 +803,10 @@
 static void SmallMapWindowProc(Window *w, WindowEvent *e)
 {
 	switch (e->event) {
+	case WE_CREATE: { /* Disable zoom in button */
+		w->disabled_state = (1 << 13);
+		smallmap_zoom = 1;
+	} break;
 	case WE_PAINT: {
 		const uint16 *tbl;
 		int x,y,y_org;
@@ -846,8 +854,8 @@
 			w2 = FindWindowById(WC_MAIN_WINDOW, 0);
 
 			pt = RemapCoords(WP(w,smallmap_d).scroll_x, WP(w,smallmap_d).scroll_y, 0);
-			WP(w2,vp_d).scrollpos_x = pt.x + ((_cursor.pos.x - w->left + 2) << 4) - (w2->viewport->virtual_width >> 1);
-			WP(w2,vp_d).scrollpos_y = pt.y + ((_cursor.pos.y - w->top - 16) << 4) - (w2->viewport->virtual_height >> 1);
+			WP(w2,vp_d).scrollpos_x = (pt.x * smallmap_zoom) + (((_cursor.pos.x - w->left + 2) << 4) * smallmap_zoom)  - ((w2->viewport->virtual_width >> 1) /  smallmap_zoom);
+			WP(w2,vp_d).scrollpos_y = (pt.y * smallmap_zoom) + (((_cursor.pos.y - w->top - 16) << 4) * smallmap_zoom) - ((w2->viewport->virtual_height >> 1)  / smallmap_zoom);
 		} break;
 
 		case 5: /* Show land contours */
@@ -864,12 +872,33 @@
 			SndPlayFx(SND_15_BEEP);
 			break;
 
+		case 11: /* centre location */
+			SmallMapRecentre();
+			SetWindowDirty(w);
+			SndPlayFx(SND_15_BEEP);
+			break;
 		case 12: /* toggle town names */
 			w->click_state ^= (1 << 12);
 			_smallmap_show_towns = (w->click_state >> 12) & 1;
 			SetWindowDirty(w);
 			SndPlayFx(SND_15_BEEP);
 			break;
+		case 13: /* zoom in */
+			if (smallmap_zoom > 1)
+				smallmap_zoom--;
+			
+			SmallMapRecentre();
+			SetWindowDirty(w);
+			SndPlayFx(SND_15_BEEP);
+			break;
+		case 14: /* zoom out */
+			if (smallmap_zoom < 8)
+				smallmap_zoom++;
+			
+			SmallMapRecentre();
+			SetWindowDirty(w);
+			SndPlayFx(SND_15_BEEP);
+			break;
 		}
 		break;
 
@@ -888,9 +917,55 @@
 		if ((++w->vscroll.pos & 0x1F) == 0)
 			SetWindowDirty(w);
 		break;
+
+	case WE_SCROLL: {
+		/* handle mouse wheel zooming */
+		int oldzoom = smallmap_zoom;
+
+		if (smallmap_zoom > 1 && e->scroll.dir == -1)
+			smallmap_zoom += e->scroll.dir;
+			
+		if (smallmap_zoom < 8 && e->scroll.dir == 1)
+			smallmap_zoom += e->scroll.dir;
+	
+		if (oldzoom != smallmap_zoom)
+		{
+			SmallMapRecentre();
+			SetWindowDirty(w);
+		}
+
+		} break;
 	}
 }
 
+void SmallMapRecentre(void)
+{
+	int x,y;
+	Window *w;
+	ViewPort *vp;
+	
+	/* recentre the map */
+	w = FindWindowById(WC_SMALLMAP, 0);
+	vp = FindWindowById(WC_MAIN_WINDOW, 0)->viewport;
+
+	x =  ((((vp->virtual_width / smallmap_zoom) - (220*32)) / 2) + vp->virtual_left) / (4  * smallmap_zoom);
+	y = (((((vp->virtual_height  / smallmap_zoom) - (120*32)) / 2) + vp->virtual_top) / (2 * smallmap_zoom)) - 32;
+
+	WP(w,smallmap_d).scroll_x = (y-x) & ~0xF;
+	WP(w,smallmap_d).scroll_y = (x+y) & ~0xF;
+	WP(w,smallmap_d).subscroll = 0;
+
+	/* handle disabled states of buttons */
+	CLRBIT(w->disabled_state, 13);
+	CLRBIT(w->disabled_state, 14);
+
+	if (smallmap_zoom <= 1) {
+		SETBIT(w->disabled_state, 13);
+	}if (smallmap_zoom >= 8) {
+		SETBIT(w->disabled_state, 14);
+	}
+}	
+
 static const WindowDesc _smallmap_desc = {
 	-1,-1, 446, 314,
 	WC_SMALLMAP,0,
@@ -913,8 +988,8 @@
 
 		vp = FindWindowById(WC_MAIN_WINDOW, 0)->viewport;
 
-		x =  (((vp->virtual_width - (220*32)) / 2) + vp->virtual_left) / 4;
-		y = ((((vp->virtual_height- (120*32)) / 2) + vp->virtual_top ) / 2) - 32;
+		x =  ((((vp->virtual_width / smallmap_zoom) - (220*32)) / 2) + vp->virtual_left) / (4  * smallmap_zoom);
+		y = (((((vp->virtual_height  / smallmap_zoom) - (120*32)) / 2) + vp->virtual_top) / (2 * smallmap_zoom)) - 32;
 		WP(w,smallmap_d).scroll_x = (y-x) & ~0xF;
 		WP(w,smallmap_d).scroll_y = (x+y) & ~0xF;
 		WP(w,smallmap_d).subscroll = 0;
@@ -930,8 +1005,8 @@
 {          WWT_6,     RESIZE_RB,    14,     2,   297,    16,   231, 0x0,				STR_NULL},
 {      WWT_PANEL,     RESIZE_TB,    14,     0,    21,   234,   255, 0x2DF,			STR_017F_ZOOM_THE_VIEW_IN},
 {      WWT_PANEL,     RESIZE_TB,    14,    22,    43,   234,   255, 0x2E0,			STR_0180_ZOOM_THE_VIEW_OUT},
-{ WWT_PUSHTXTBTN,     RESIZE_TB,    14,    44,   171,   234,   255, STR_EXTRA_VIEW_MOVE_MAIN_TO_VIEW,STR_EXTRA_VIEW_MOVE_MAIN_TO_VIEW_TT},
-{ WWT_PUSHTXTBTN,     RESIZE_TB,    14,   172,   298,   234,   255, STR_EXTRA_VIEW_MOVE_VIEW_TO_MAIN,STR_EXTRA_VIEW_MOVE_VIEW_TO_MAIN_TT},
+{ WWT_PUSHTXTBTN,     RESIZE_TB,    14,    44,   171,   234,   255, STR_EXTRA_VIEW_MOVE_VIEW_TO_MAIN,STR_EXTRA_VIEW_MOVE_VIEW_TO_MAIN_TT},
+{ WWT_PUSHTXTBTN,     RESIZE_TB,    14,   172,   298,   234,   255, STR_EXTRA_VIEW_MOVE_MAIN_TO_VIEW,STR_EXTRA_VIEW_MOVE_MAIN_TO_VIEW_TT},
 {      WWT_PANEL,    RESIZE_RTB,    14,   299,   299,   234,   255, 0x0,				STR_NULL},
 {      WWT_PANEL,    RESIZE_RTB,    14,     0,   287,   256,   267, 0x0,				STR_NULL},
 {  WWT_RESIZEBOX,   RESIZE_LRTB,    14,   288,   299,   256,   267, 0x0,				STR_RESIZE_BUTTON},
@@ -987,6 +1062,16 @@
 		w->viewport->virtual_width  += e->sizing.diff.x;
 		w->viewport->virtual_height += e->sizing.diff.y;
 		break;
+
+	case WE_SCROLL: {
+		/* handle mouse wheel zooming */
+		if (e->scroll.dir == -1)
+			DoZoomInOutWindow(ZOOM_IN, w);
+			
+		if (e->scroll.dir == 1)
+			DoZoomInOutWindow(ZOOM_OUT, w);
+
+		} break;
 	}
 }
 
Index: window.c
===================================================================
--- window.c	(revision 2431)
+++ window.c	(working copy)
@@ -104,6 +104,7 @@
 	const Widget *wi1 = &w->widget[widget];
 	const Widget *wi2 = &w->widget[widget + 1];
 	Scrollbar *sb;
+	WindowEvent e;
 
 	/* The listbox can only scroll if scrolling was done on the scrollbar itself,
 	 * or on the listbox (and the next item is (must be) the scrollbar)
@@ -120,6 +121,10 @@
 			}
 		}
 	}
+
+	e.event = WE_SCROLL;
+	e.scroll.dir = wheel;
+	w->wndproc(w, &e);
 }
 
 
@@ -1376,7 +1381,6 @@
 	x = _cursor.pos.x;
 	y = _cursor.pos.y;
 
-
 	if (click == 0 && mousewheel == 0) {
 		if (_patches.autoscroll && _game_mode != GM_MENU) {
 			w = FindWindowFromPt(x, y);
@@ -1402,44 +1406,52 @@
 		return;
 	w = MaybeBringWindowToFront(w);
 	vp = IsPtInWindowViewport(w, x, y);
-	if (vp != NULL) {
-		if (_game_mode == GM_MENU)
-			return;
 
-		// only allow zooming in-out in main window, or in viewports
-		if ( mousewheel && !(w->flags4 & WF_DISABLE_VP_SCROLL) &&
-			   (w->window_class == WC_MAIN_WINDOW || w->window_class == WC_EXTRA_VIEW_PORT) ) {
+	// the viewport isn't interactive on the menu so return
+	if (_game_mode == GM_MENU && vp != NULL)
+		return;
+
+	// something happened to the mousewheel
+	if (mousewheel) {
+		// only allow zooming in-out in main window
+		if (!(w->flags4 & WF_DISABLE_VP_SCROLL) && (w->window_class == WC_MAIN_WINDOW) ) {
 			ZoomInOrOutToCursorWindow(mousewheel < 0,w);
+		// otherwise dispatch the event
+		} else {
+			DispatchMouseWheelEvent(w, GetWidgetFromPos(w, x - w->left, y - w->top), mousewheel);
 		}
+	}
 
-		if (click == 1) {
+	// left mouse button clicked
+	if (click == 1) {
+		if (vp != NULL) {
 			DEBUG(misc, 2) ("cursor: 0x%X (%d)", _cursor.sprite, _cursor.sprite);
 			if (_thd.place_mode != 0 &&
-					// query button and place sign button work in pause mode
-					!(_cursor.sprite == 0x2CF || _cursor.sprite == 0x2D2) &&
-					_pause != 0 &&
-					!_cheats.build_in_pause.value)
-						return;
+				// query button and place sign button work in pause mode
+				!(_cursor.sprite == 0x2CF || _cursor.sprite == 0x2D2) &&
+				_pause != 0 &&
+				!_cheats.build_in_pause.value)
+					return;
 
 			if (_thd.place_mode == 0) {
 				HandleViewportClicked(vp, x, y);
 			} else {
 				PlaceObject();
 			}
-		} else if (click == 2) {
-			if (!(w->flags4 & WF_DISABLE_VP_SCROLL)) {
-				_scrolling_viewport = true;
-				_cursor.fix_at = true;
-			}
+		} else {
+			DispatchLeftClickEvent(w, x - w->left, y - w->top);if 
 		}
-	} else {
-		if (mousewheel)
-			DispatchMouseWheelEvent(w, GetWidgetFromPos(w, x - w->left, y - w->top), mousewheel);
 
-		if (click == 1)
-			DispatchLeftClickEvent(w, x - w->left, y - w->top);
-		else if (click == 2)
-			DispatchRightClickEvent(w, x - w->left, y - w->top);
+	// right mouse button clicked
+	} else if (click == 2) {
+			if (vp != NULL) {
+				if (!(w->flags4 & WF_DISABLE_VP_SCROLL)) {
+					_scrolling_viewport = true;
+					_cursor.fix_at = true;
+				}
+			} else {
+				DispatchRightClickEvent(w, x - w->left, y - w->top);
+			}
 	}
 }
 
Index: window.h
===================================================================
--- window.h	(revision 2431)
+++ window.h	(working copy)
@@ -128,6 +128,11 @@
 		uint wparam; // additional message-specific information
 		uint lparam; // additional message-specific information
 	} message;
+
+	struct {
+		byte event;
+		int dir; // -1 is up, 1 is down
+	} scroll;
 };
 
 enum WindowKeyCodes {
@@ -474,7 +479,8 @@
 	WE_MOUSEOVER = 20,
 	WE_ON_EDIT_TEXT_CANCEL = 21,
 	WE_RESIZE = 22,
-	WE_MESSAGE = 23
+	WE_MESSAGE = 23,
+	WE_SCROLL = 24
 };
 
 
